---
# This playbook inits JAVA & MYSQL Backend instances into a docker swarm
- name:  Check Swarm status on ALL BACKEND nodes
  hosts: backend-swarm
  gather_facts: false
  become: yes
  tasks:
   - name: Check swarm status
     shell: docker info | grep 'Swarm'
     register: be_swarm_status
    
   - name: Create BACKEND MANAGER Swarm bootstrap group
     add_host:
       hostname: "{{ item }}"
       groups: backend_swarm_manager_bootstrap
     with_items: "{{ groups['backend-manager'] }}" 
     when: "'active' not in be_swarm_status.stdout_lines"
     run_once: true
      
   - name: Create BACKEND WORKERS Swarm bootstrap group.
     add_host:
       hostname: "{{ item }}"
       groups: backend_swarm_workers_bootstrap
     with_items:  "{{ groups['backend-nodes'] }}"  
     when: "'active' not in be_swarm_status.stdout_lines"
     run_once: true

# Start the init of the swarm 
- name:  Init Backend Docker Swarm Cluster
  hosts: backend_swarm_manager_bootstrap[0]
  gather_facts: false
  become: yes
  vars:
    manager_ip: "35.174.241.5"
  tasks:
    - name: Init Swarm cluster
      shell: docker swarm init --advertise-addr={{ manager_ip }}:2377
      register: be_cluster_init

    - name: Add initialized host to first_backend_manager_node temp group
      add_host:
        hostname: "{{ groups['backend_swarm_manager_bootstrap'][0] }}" 
        groups: first_backend_manager_node
      when: be_cluster_init.changed == true

      # Get worker token
    - name: Get BACKEND Swarm WORKERS token
      shell: docker swarm join-token -q worker
      register: backend_swarm_worker_token
      when: "'first_backend_manager_node' in groups"
    
# Join BACKEND workers to swarm
- name: Join BACKEND workers to swarm cluster
  hosts: backend_swarm_workers_bootstrap
  gather_facts: false
  become: yes
  vars:
    worker_token: "{{ hostvars[groups['first_backend_manager_node'][0]]['backend_swarm_worker_token']['stdout'] }}"
    manager_ip: "35.174.241.5"
  tasks:
    - name: Check swarm status on workers nodes
      shell: docker info | grep 'Swarm'
      register: be_swarm_status_workers

    - name: Join BACKEND workers to swarm cluster
      shell: docker swarm join --token={{ worker_token }} {{ manager_ip }}:2377
      when: "'active' not in be_swarm_status_workers.stdout_lines"